regress-samples: Train and test a cross-validated supervised learning regressor.
================================================================================



.. raw:: html

   <div class="tabbed">
     <ul class="nav nav-tabs">
       <li class="active"><a data-toggle="tab" href="#cli">Command line interface</a></li>
       <li><a data-toggle="tab" href="#api">Artifact API</a></li>
     </ul>
     <div class="tab-content">
       <div id="cli" class="tab-pane fade in active">
         <h4>Docstring:</h4>
         <pre>Usage: qiime sample-classifier regress-samples [OPTIONS]

     Predicts a continuous sample metadata column using a supervised learning
     regressor. Splits input data into training and test sets. The training set
     is used to train and test the estimator using a stratified k-fold cross-
     validation scheme. This includes optional steps for automated feature
     extraction and hyperparameter optimization. The test set validates
     classification accuracy of the optimized estimator. Outputs classification
     results for test set. For more details on the learning algorithm, see
     http://scikit-learn.org/stable/supervised_learning.html

   Options:
     --i-table ARTIFACT PATH FeatureTable[Frequency]
                                     Feature table containing all features that
                                     should be used for target prediction.
                                     [required]
     --m-metadata-file MULTIPLE PATH
                                     Metadata file or artifact viewable as
                                     metadata. This option may be supplied
                                     multiple times to merge metadata.
                                     [required]
     --m-metadata-column MetadataColumn[Numeric]
                                     Column from metadata file or artifact
                                     viewable as metadata. Numeric metadata
                                     column to use as prediction target.
                                     [required]
     --p-test-size FLOAT             Fraction of input samples to exclude from
                                     training set and use for classifier testing.
                                     [default: 0.2]
     --p-step FLOAT                  If optimize_feature_selection is True, step
                                     is the percentage of features to remove at
                                     each iteration.  [default: 0.05]
     --p-cv INTEGER RANGE            Number of k-fold cross-validations to
                                     perform.  [default: 5]
     --p-random-state INTEGER        Seed used by random number generator.
                                     [optional]
     --p-n-jobs INTEGER              Number of jobs to run in parallel.
                                     [default: 1]
     --p-n-estimators INTEGER RANGE  Number of trees to grow for estimation. More
                                     trees will improve predictive accuracy up to
                                     a threshold level, but will also increase
                                     time and memory requirements. This parameter
                                     only affects ensemble estimators, such as
                                     Random Forest, AdaBoost, ExtraTrees, and
                                     GradientBoosting.  [default: 100]
     --p-estimator [Lasso|RandomForestRegressor|Ridge|LinearSVR|ElasticNet|AdaBoostRegressor|GradientBoostingRegressor|KNeighborsRegressor|ExtraTreesRegressor|SVR]
                                     Estimator method to use for sample
                                     prediction.  [default:
                                     RandomForestRegressor]
     --p-optimize-feature-selection / --p-no-optimize-feature-selection
                                     Automatically optimize input feature
                                     selection using recursive feature
                                     elimination.  [default: False]
     --p-stratify / --p-no-stratify  Evenly stratify training and test data among
                                     metadata categories. If True, all values in
                                     column must match at least two samples.
                                     [default: False]
     --p-parameter-tuning / --p-no-parameter-tuning
                                     Automatically tune hyperparameters using
                                     random grid search.  [default: False]
     --p-missing-samples [error|ignore]
                                     How to handle missing samples in metadata.
                                     "error" will fail if missing samples are
                                     detected. "ignore" will cause the feature
                                     table and metadata to be filtered, so that
                                     only samples found in both files are
                                     retained.  [default: error]
     --o-sample-estimator ARTIFACT PATH SampleEstimator[Regressor]
                                     Trained sample estimator.  [required if not
                                     passing --output-dir]
     --o-feature-importance ARTIFACT PATH FeatureData[Importance]
                                     Importance of each input feature to model
                                     accuracy.  [required if not passing
                                     --output-dir]
     --o-predictions ARTIFACT PATH SampleData[RegressorPredictions]
                                     Predicted target values for each input
                                     sample.  [required if not passing --output-
                                     dir]
     --o-model-summary VISUALIZATION PATH
                                     Summarized parameter and (if enabled)
                                     feature selection information for the
                                     trained estimator.  [required if not passing
                                     --output-dir]
     --o-accuracy-results VISUALIZATION PATH
                                     Accuracy results visualization.  [required
                                     if not passing --output-dir]
     --output-dir DIRECTORY          Output unspecified results to a directory
     --cmd-config PATH               Use config file for command options
     --verbose                       Display verbose output to stdout and/or
                                     stderr during execution of this action.
                                     [default: False]
     --quiet                         Silence output if execution is successful
                                     (silence is golden).  [default: False]
     --citations                     Show citations and exit.
     --help                          Show this message and exit.</pre>
       </div>
       <div id="api" class="tab-pane fade">
       <h4>Import:</h4>

.. command-block::
   :no-exec:

   from qiime2.plugins.sample_classifier.pipelines import regress_samples

.. raw:: html

       <h4>Docstring:</h4>
         <pre>Train and test a cross-validated supervised learning regressor.

   Predicts a continuous sample metadata column using a supervised learning
   regressor. Splits input data into training and test sets. The training set
   is used to train and test the estimator using a stratified k-fold cross-
   validation scheme. This includes optional steps for automated feature
   extraction and hyperparameter optimization. The test set validates
   classification accuracy of the optimized estimator. Outputs classification
   results for test set. For more details on the learning algorithm, see
   http://scikit-learn.org/stable/supervised_learning.html

   Parameters
   ----------
   table : FeatureTable[Frequency]
       Feature table containing all features that should be used for target
       prediction.
   metadata : MetadataColumn[Numeric]
       Numeric metadata column to use as prediction target.
   test_size : Float % Range(0.0, 1.0, inclusive_start=False), optional
       Fraction of input samples to exclude from training set and use for
       classifier testing.
   step : Float % Range(0.0, 1.0, inclusive_start=False), optional
       If optimize_feature_selection is True, step is the percentage of
       features to remove at each iteration.
   cv : Int % Range(1, None), optional
       Number of k-fold cross-validations to perform.
   random_state : Int, optional
       Seed used by random number generator.
   n_jobs : Int, optional
       Number of jobs to run in parallel.
   n_estimators : Int % Range(1, None), optional
       Number of trees to grow for estimation. More trees will improve
       predictive accuracy up to a threshold level, but will also increase
       time and memory requirements. This parameter only affects ensemble
       estimators, such as Random Forest, AdaBoost, ExtraTrees, and
       GradientBoosting.
   estimator : Str % Choices({'AdaBoostRegressor', 'ElasticNet', 'ExtraTreesRegressor', 'GradientBoostingRegressor', 'KNeighborsRegressor', 'Lasso', 'LinearSVR', 'RandomForestRegressor', 'Ridge', 'SVR'}), optional
       Estimator method to use for sample prediction.
   optimize_feature_selection : Bool, optional
       Automatically optimize input feature selection using recursive feature
       elimination.
   stratify : Bool, optional
       Evenly stratify training and test data among metadata categories. If
       True, all values in column must match at least two samples.
   parameter_tuning : Bool, optional
       Automatically tune hyperparameters using random grid search.
   missing_samples : Str % Choices({'error', 'ignore'}), optional
       How to handle missing samples in metadata. "error" will fail if missing
       samples are detected. "ignore" will cause the feature table and
       metadata to be filtered, so that only samples found in both files are
       retained.

   Returns
   -------
   sample_estimator : SampleEstimator[Regressor]
       Trained sample estimator.
   feature_importance : FeatureData[Importance]
       Importance of each input feature to model accuracy.
   predictions : SampleData[RegressorPredictions]
       Predicted target values for each input sample.
   model_summary : Visualization
       Summarized parameter and (if enabled) feature selection information for
       the trained estimator.
   accuracy_results : Visualization
       Accuracy results visualization.</pre>
       </div>
     </div>
   </div>